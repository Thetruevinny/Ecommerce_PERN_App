{"ast":null,"code":"var _jsxFileName = \"/Users/abhikvinod/Documents/python/Ecommerce_PERN_App/view/src/Features/UserPage.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n// import Styles from \"./Styles/UserPage.module.css\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { loadToken, selectToken } from \"../Components/LoginForm/TokenSlice\";\n\n// function UserPage() {\n//     const [activeItem, setActiveItem] = useState(null);\n//     const csrfToken = useSelector(selectToken);\n//     const dispatch = useDispatch();\n//     const [userId, setUserId] = useState(null);\n//     const orders = [{total: 25, products: [{name: 'Blue T-shirt', price: 10, quantity: 2}, {name: 'Blue Cap', price: 7.50, quantity: 1}]}];\n\n//     const handleToggle = (index) => {\n//         setActiveItem((prev) => (prev === index ? null : index));\n//     };\n\n//     const getUserId = async () => {\n//         const response = await fetch('http://localhost:50423/api/user/id', {\n//             credentials: 'include',\n//         });\n//         const result = await response.json();\n//         if (response.ok) {\n//             setUserId(result.id);\n//             alert(userId);\n//         } else {\n//             const error = result.error;\n//             alert(error);\n//         }\n//     }\n\n//     useEffect(() => {\n//         dispatch(loadToken);\n//         getUserId();\n//     }, []);\n\n//     return (\n//         <div className={Styles.user}>\n//             <h2>User Information</h2>\n//             <ul className={Styles.list}>\n//                 {[\"Order History\", \"Change Password\"].map((item, index) => (\n//                     <li\n//                         key={index}\n//                         className={`${Styles.listItem} ${\n//                             activeItem === index ? Styles.active : \"\"\n//                         }`}\n//                     >\n//                         <span className={Styles.triangle} onClick={() => handleToggle(index)}></span>\n//                         {activeItem === index ? null : item}\n//                         {(activeItem === index) && (index === 0) ? (\n//                             <div className={Styles.orders}>\n//                                 <h3>Order History</h3>\n//                                 {/* Will fill out logic for this section later */}\n//                                 {orders.map(order => {\n//                                     return (\n//                                         <ul>\n//                                             {order.products.map(product => <li>{`You bought ${product.quantity} ${product.name}${product.quantity === 1 ? '' : 's'} which cost £${product.price} each.`}</li>)}\n//                                             <li>Total: £{order.total}</li>\n//                                         </ul>\n//                                     );\n//                                 })}\n//                             </div>\n//                         ): null}\n//                         {(activeItem === index) && (index === 1) ? (\n//                             // Will fill out api call later\n//                             <form className={Styles.form} method=\"POST\" action={`http://localhost:50423/api/user/changePassword/${userId}`}>\n//                                 <h3>{item}</h3>\n//                                 <label htmlFor=\"oldPassword\">Current Password:</label>\n//                                 <input id='oldPassword' name=\"oldPassword\" type=\"password\" placeholder=\"Current password\" />\n//                                 <label htmlFor=\"newPassword\">New Password:</label>\n//                                 <input id='newPassword' name=\"newPassword\" type=\"password\" placeholder=\"New password\" />\n//                                 <label htmlFor=\"newPasswordCheck\">Re-enter New Password:</label>\n//                                 <input id='newPasswordCheck' name=\"newPasswordCheck\" type=\"password\" placeholder=\"New password\" />\n//                                 <input type='hidden' name='_csrf' value={csrfToken} />\n//                                 <button>Submit</button>\n//                             </form>\n//                         ): null}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// }\n\n// export default UserPage;\n\nimport { useEffect, useState, useRef } from \"react\";\nimport Styles from \"./Styles/UserPage.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadToken, selectToken } from \"../Components/LoginForm/TokenSlice\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserPage() {\n  _s();\n  const [activeItem, setActiveItem] = useState(null);\n  const csrfToken = useSelector(selectToken);\n  const dispatch = useDispatch();\n  const [userId, setUserId] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [orders, setOrders] = useState([]);\n  const [verified, setVerified] = useState(false);\n  const navigate = useNavigate();\n  const handleToggle = index => {\n    setActiveItem(prev => prev === index ? null : index);\n  };\n\n  // Check if the user is authenticated if not redirects to login\n  const checkAuth = async () => {\n    const response = await fetch('http://localhost:50423/api/check/auth', {\n      credentials: 'include'\n    });\n    const json = await response.json();\n    setVerified(json.result);\n    if (!json.result) {\n      setTimeout(() => navigate('/login'), 2000);\n    }\n  };\n\n  // Request to backend to retrieve user id\n  const getUserId = async () => {\n    const response = await fetch('http://localhost:50423/api/user/id', {\n      credentials: 'include'\n    });\n    const result = await response.json();\n    if (response.ok) {\n      setUserId(result.id);\n    } else {\n      const error = result.error;\n      alert(error);\n    }\n  };\n\n  // Request to backend to retrieve all orders by the current user\n  const getOrders = async () => {\n    console.log(userId);\n    const response = await fetch(`http://localhost:50423/api/user/orders/${userId}`);\n    const result = await response.json();\n    if (response.ok) {\n      setOrders(result.data);\n    } else {\n      setErrorMessage(result.Error);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 2000);\n    }\n  };\n\n  // Refs for input fields\n  const oldPasswordRef = useRef(null);\n  const newPasswordRef = useRef(null);\n  const newPasswordCheckRef = useRef(null);\n\n  // Calls made on component render to retrieve csrfToken and get user id\n  useEffect(() => {\n    checkAuth();\n    dispatch(loadToken);\n    getUserId();\n  }, []);\n\n  // Get all orders for a specific user id\n  useEffect(() => {\n    if (userId) {\n      getOrders(userId);\n    }\n  }, [userId]);\n\n  // Handle the password change form submission\n  const handlePasswordChange = async event => {\n    event.preventDefault(); // Prevent the default form submission\n\n    const oldPassword = event.target.oldPassword.value;\n    const newPassword = event.target.newPassword.value;\n    const newPasswordCheck = event.target.newPasswordCheck.value;\n    try {\n      const response = await fetch(`http://localhost:50423/api/user/changePassword/${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'CSRF-Token': csrfToken\n        },\n        body: JSON.stringify({\n          oldPassword,\n          newPassword,\n          newPasswordCheck\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        // Redirect if the server responded with a redirect URL\n        setSuccessMessage(result.success);\n        setActiveItem(null);\n        // Clear input fields on success\n        oldPasswordRef.current.value = '';\n        newPasswordRef.current.value = '';\n        newPasswordCheckRef.current.value = '';\n\n        // Clear success message after 2 seconds\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 2000);\n      } else if (result.Error) {\n        // Show error message\n        setErrorMessage(result.Error);\n        if (result.Error.includes('current')) {\n          oldPasswordRef.current.value = '';\n        } else if (result.Error.includes('two')) {\n          newPasswordRef.current.value = '';\n          newPasswordCheckRef.current.value = '';\n        } else {\n          oldPasswordRef.current.value = '';\n          newPasswordRef.current.value = '';\n          newPasswordCheckRef.current.value = '';\n        }\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 2000);\n      }\n    } catch (error) {\n      // Error handling\n      console.error('Error during password change:', error);\n      oldPasswordRef.current.value = '';\n      newPasswordRef.current.value = '';\n      newPasswordCheckRef.current.value = '';\n      setErrorMessage('An unexpected error occurred. Please try again.');\n    }\n  };\n\n  // Authentication check and renders different compoenents dependant on the result\n  if (!verified) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: Styles.error,\n      children: \"To access this page, you must be logged in. Please wait to be redirected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.user,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: Styles.list,\n      children: [[\"Order History\", \"Change Password\"].map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${Styles.listItem} ${activeItem === index ? Styles.active : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: Styles.triangle,\n          onClick: () => handleToggle(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), activeItem === index ? null : item, activeItem === index && index === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Styles.orders,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Order History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 33\n          }, this), orders ? Object.keys(orders).map((key, orderIndex) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Order: \", orderIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [orders[key].products.map((product, productIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: `You bought ${product.quantity} ${product.name}${product.quantity === 1 ? '' : 's'} which cost £${product.price} each.`\n              }, productIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 49\n              }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Total: \\xA3\", orders[key].total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 45\n              }, this)]\n            }, orderIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No orders placed currently.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 29\n        }, this) : null, activeItem === index && index === 1 ? /*#__PURE__*/_jsxDEV(\"form\", {\n          className: Styles.form,\n          onSubmit: handlePasswordChange,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"oldPassword\",\n            children: \"Current Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"oldPassword\",\n            name: \"oldPassword\",\n            type: \"password\",\n            placeholder: \"Current password\",\n            ref: oldPasswordRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"newPassword\",\n            name: \"newPassword\",\n            type: \"password\",\n            placeholder: \"New password\",\n            ref: newPasswordRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPasswordCheck\",\n            children: \"Re-enter New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"newPasswordCheck\",\n            name: \"newPasswordCheck\",\n            type: \"password\",\n            placeholder: \"New password\",\n            ref: newPasswordCheckRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            name: \"_csrf\",\n            value: csrfToken\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 29\n        }, this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          color: \"white\"\n        },\n        children: successMessage ? successMessage : errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 9\n  }, this);\n}\n_s(UserPage, \"hkMwP2XdY3Y/w+niYlCLL6hN5dQ=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["useEffect","useState","useRef","Styles","useSelector","useDispatch","loadToken","selectToken","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UserPage","_s","activeItem","setActiveItem","csrfToken","dispatch","userId","setUserId","errorMessage","setErrorMessage","successMessage","setSuccessMessage","orders","setOrders","verified","setVerified","navigate","handleToggle","index","prev","checkAuth","response","fetch","credentials","json","result","setTimeout","getUserId","ok","id","error","alert","getOrders","console","log","data","Error","oldPasswordRef","newPasswordRef","newPasswordCheckRef","handlePasswordChange","event","preventDefault","oldPassword","target","value","newPassword","newPasswordCheck","method","headers","body","JSON","stringify","success","current","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","user","list","map","item","listItem","active","triangle","onClick","Object","keys","key","orderIndex","products","product","productIndex","quantity","name","price","total","form","onSubmit","htmlFor","type","placeholder","ref","required","style","color","_c","$RefreshReg$"],"sources":["/Users/abhikvinod/Documents/python/Ecommerce_PERN_App/view/src/Features/UserPage.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\n// import Styles from \"./Styles/UserPage.module.css\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { loadToken, selectToken } from \"../Components/LoginForm/TokenSlice\";\n\n// function UserPage() {\n//     const [activeItem, setActiveItem] = useState(null);\n//     const csrfToken = useSelector(selectToken);\n//     const dispatch = useDispatch();\n//     const [userId, setUserId] = useState(null);\n//     const orders = [{total: 25, products: [{name: 'Blue T-shirt', price: 10, quantity: 2}, {name: 'Blue Cap', price: 7.50, quantity: 1}]}];\n\n//     const handleToggle = (index) => {\n//         setActiveItem((prev) => (prev === index ? null : index));\n//     };\n\n//     const getUserId = async () => {\n//         const response = await fetch('http://localhost:50423/api/user/id', {\n//             credentials: 'include',\n//         });\n//         const result = await response.json();\n//         if (response.ok) {\n//             setUserId(result.id);\n//             alert(userId);\n//         } else {\n//             const error = result.error;\n//             alert(error);\n//         }\n//     }\n\n//     useEffect(() => {\n//         dispatch(loadToken);\n//         getUserId();\n//     }, []);\n\n//     return (\n//         <div className={Styles.user}>\n//             <h2>User Information</h2>\n//             <ul className={Styles.list}>\n//                 {[\"Order History\", \"Change Password\"].map((item, index) => (\n//                     <li\n//                         key={index}\n//                         className={`${Styles.listItem} ${\n//                             activeItem === index ? Styles.active : \"\"\n//                         }`}\n//                     >\n//                         <span className={Styles.triangle} onClick={() => handleToggle(index)}></span>\n//                         {activeItem === index ? null : item}\n//                         {(activeItem === index) && (index === 0) ? (\n//                             <div className={Styles.orders}>\n//                                 <h3>Order History</h3>\n//                                 {/* Will fill out logic for this section later */}\n//                                 {orders.map(order => {\n//                                     return (\n//                                         <ul>\n//                                             {order.products.map(product => <li>{`You bought ${product.quantity} ${product.name}${product.quantity === 1 ? '' : 's'} which cost £${product.price} each.`}</li>)}\n//                                             <li>Total: £{order.total}</li>\n//                                         </ul>\n//                                     );\n//                                 })}\n//                             </div>\n//                         ): null}\n//                         {(activeItem === index) && (index === 1) ? (\n//                             // Will fill out api call later\n//                             <form className={Styles.form} method=\"POST\" action={`http://localhost:50423/api/user/changePassword/${userId}`}>\n//                                 <h3>{item}</h3>\n//                                 <label htmlFor=\"oldPassword\">Current Password:</label>\n//                                 <input id='oldPassword' name=\"oldPassword\" type=\"password\" placeholder=\"Current password\" />\n//                                 <label htmlFor=\"newPassword\">New Password:</label>\n//                                 <input id='newPassword' name=\"newPassword\" type=\"password\" placeholder=\"New password\" />\n//                                 <label htmlFor=\"newPasswordCheck\">Re-enter New Password:</label>\n//                                 <input id='newPasswordCheck' name=\"newPasswordCheck\" type=\"password\" placeholder=\"New password\" />\n//                                 <input type='hidden' name='_csrf' value={csrfToken} />\n//                                 <button>Submit</button>\n//                             </form>\n//                         ): null}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// }\n\n// export default UserPage;\n\nimport { useEffect, useState, useRef } from \"react\";\nimport Styles from \"./Styles/UserPage.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadToken, selectToken } from \"../Components/LoginForm/TokenSlice\";\nimport { useNavigate } from \"react-router\";\n\nfunction UserPage() {\n    const [activeItem, setActiveItem] = useState(null);\n    const csrfToken = useSelector(selectToken);\n    const dispatch = useDispatch();\n    const [userId, setUserId] = useState(null);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [successMessage, setSuccessMessage] = useState(null);\n    const [orders, setOrders] = useState([]);\n    const [verified, setVerified] = useState(false);\n    const navigate = useNavigate();\n\n    const handleToggle = (index) => {\n        setActiveItem((prev) => (prev === index ? null : index));\n    };\n\n    // Check if the user is authenticated if not redirects to login\n    const checkAuth = async () => {\n        const response = await fetch('http://localhost:50423/api/check/auth', {\n            credentials: 'include',\n        });\n        const json = await response.json();\n        setVerified(json.result);\n        if (!json.result) {\n            setTimeout(() => navigate('/login'), 2000);\n        }\n    };\n\n    // Request to backend to retrieve user id\n    const getUserId = async () => {\n        const response = await fetch('http://localhost:50423/api/user/id', {\n            credentials: 'include',\n        });\n        const result = await response.json();\n        if (response.ok) {\n            setUserId(result.id);\n        } else {\n            const error = result.error;\n            alert(error);\n        }\n    };\n\n    // Request to backend to retrieve all orders by the current user\n    const getOrders = async () => {\n        console.log(userId);\n        const response = await fetch(`http://localhost:50423/api/user/orders/${userId}`);\n        const result = await response.json();\n        if (response.ok) {\n            setOrders(result.data);\n        } else {\n            setErrorMessage(result.Error);\n            setTimeout(() => {\n                setErrorMessage(null);\n            }, 2000);\n        }\n    }\n\n    // Refs for input fields\n    const oldPasswordRef = useRef(null);\n    const newPasswordRef = useRef(null);\n    const newPasswordCheckRef = useRef(null);\n\n    // Calls made on component render to retrieve csrfToken and get user id\n    useEffect(() => {\n        checkAuth();\n        dispatch(loadToken);\n        getUserId();\n    }, []);\n\n    // Get all orders for a specific user id\n    useEffect(() => {\n        if (userId) {\n            getOrders(userId);\n        }\n    }, [userId]);\n\n    // Handle the password change form submission\n    const handlePasswordChange = async (event) => {\n        event.preventDefault(); // Prevent the default form submission\n\n        const oldPassword = event.target.oldPassword.value;\n        const newPassword = event.target.newPassword.value;\n        const newPasswordCheck = event.target.newPasswordCheck.value;\n\n        try {\n            const response = await fetch(`http://localhost:50423/api/user/changePassword/${userId}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'CSRF-Token': csrfToken,\n                },\n                body: JSON.stringify({\n                    oldPassword,\n                    newPassword,\n                    newPasswordCheck,\n                }),\n            });\n\n            const result = await response.json();\n\n            if (response.ok) {\n                // Redirect if the server responded with a redirect URL\n                setSuccessMessage(result.success);\n                setActiveItem(null);\n                // Clear input fields on success\n                oldPasswordRef.current.value = '';\n                newPasswordRef.current.value = '';\n                newPasswordCheckRef.current.value = '';\n                \n                // Clear success message after 2 seconds\n                setTimeout(() => {\n                    setSuccessMessage(null);\n                }, 2000);\n            } else if (result.Error) {\n                // Show error message\n                setErrorMessage(result.Error);\n                if (result.Error.includes('current')) {\n                    oldPasswordRef.current.value = '';\n                } else if (result.Error.includes('two')) {\n                    newPasswordRef.current.value = '';\n                    newPasswordCheckRef.current.value = ''; \n                } else {\n                    oldPasswordRef.current.value = '';\n                    newPasswordRef.current.value = '';\n                    newPasswordCheckRef.current.value = ''; \n                }\n                setTimeout(() => {\n                    setErrorMessage(null);\n                }, 2000);\n            }\n        } catch (error) {\n            // Error handling\n            console.error('Error during password change:', error);\n            oldPasswordRef.current.value = '';\n            newPasswordRef.current.value = '';\n            newPasswordCheckRef.current.value = '';\n            setErrorMessage('An unexpected error occurred. Please try again.');\n        }\n    };\n\n    // Authentication check and renders different compoenents dependant on the result\n    if (!verified) {\n        return <p className={Styles.error}>To access this page, you must be logged in. Please wait to be redirected.</p>;\n    }\n\n    return (\n        <div className={Styles.user}>\n            <h2>User Information</h2>\n            <ul className={Styles.list}>\n                {[\"Order History\", \"Change Password\"].map((item, index) => (\n                    <li\n                        key={index}\n                        className={`${Styles.listItem} ${\n                            activeItem === index ? Styles.active : \"\"\n                        }`}\n                    >\n                        <span className={Styles.triangle} onClick={() => handleToggle(index)}></span>\n                        {activeItem === index ? null : item}\n                        {(activeItem === index) && (index === 0) ? (\n                            <div className={Styles.orders}>\n                                <h3>Order History</h3>\n                                {orders ? Object.keys(orders).map((key, orderIndex) => (\n                                    <>\n                                        <h4>Order: {orderIndex + 1}</h4>\n                                        <ul key={orderIndex}>\n                                            {orders[key].products.map((product, productIndex) => (\n                                                <li key={productIndex}>\n                                                    {`You bought ${product.quantity} ${product.name}${product.quantity === 1 ? '' : 's'} which cost £${product.price} each.`}\n                                                </li>\n                                            ))}\n                                            <li>Total: £{orders[key].total}</li>\n                                        </ul>\n                                    </>\n                                )): <p>No orders placed currently.</p>}\n                            </div>\n                        ) : null}\n                        {(activeItem === index) && (index === 1) ? (\n                            <form className={Styles.form} onSubmit={handlePasswordChange}>\n                                <h3>{item}</h3>\n                                <label htmlFor=\"oldPassword\">Current Password:</label>\n                                <input id='oldPassword' name=\"oldPassword\" type=\"password\" placeholder=\"Current password\" ref={oldPasswordRef} required />\n                                <label htmlFor=\"newPassword\">New Password:</label>\n                                <input id='newPassword' name=\"newPassword\" type=\"password\" placeholder=\"New password\"  ref={newPasswordRef} required />\n                                <label htmlFor=\"newPasswordCheck\">Re-enter New Password:</label>\n                                <input id='newPasswordCheck' name=\"newPasswordCheck\" type=\"password\" placeholder=\"New password\" ref={newPasswordCheckRef} required />\n                                <input type='hidden' name='_csrf' value={csrfToken} />\n                                <button type=\"submit\">Submit</button>\n                                {/* {errorMessage && <p className={Styles.error}>{errorMessage}</p>} */}\n                            </form>\n                        ) : null}\n                    </li>\n                ))}\n                <li style={{color: \"white\"}} >{successMessage ? successMessage : errorMessage}</li>\n            </ul>\n        </div>\n    );\n}\n\nexport default UserPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}