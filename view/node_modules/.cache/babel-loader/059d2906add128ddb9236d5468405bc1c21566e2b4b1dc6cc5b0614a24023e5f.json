{"ast":null,"code":"var _jsxFileName = \"/Users/abhikvinod/Documents/python/Ecommerce_PERN_App/view/src/Features/UserPage.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n// import Styles from \"./Styles/UserPage.module.css\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { loadToken, selectToken } from \"../Components/LoginForm/TokenSlice\";\n\n// function UserPage() {\n//     const [activeItem, setActiveItem] = useState(null);\n//     const csrfToken = useSelector(selectToken);\n//     const dispatch = useDispatch();\n//     const [userId, setUserId] = useState(null);\n//     const orders = [{total: 25, products: [{name: 'Blue T-shirt', price: 10, quantity: 2}, {name: 'Blue Cap', price: 7.50, quantity: 1}]}];\n\n//     const handleToggle = (index) => {\n//         setActiveItem((prev) => (prev === index ? null : index));\n//     };\n\n//     const getUserId = async () => {\n//         const response = await fetch('http://localhost:50423/api/user/id', {\n//             credentials: 'include',\n//         });\n//         const result = await response.json();\n//         if (response.ok) {\n//             setUserId(result.id);\n//             alert(userId);\n//         } else {\n//             const error = result.error;\n//             alert(error);\n//         }\n//     }\n\n//     useEffect(() => {\n//         dispatch(loadToken);\n//         getUserId();\n//     }, []);\n\n//     return (\n//         <div className={Styles.user}>\n//             <h2>User Information</h2>\n//             <ul className={Styles.list}>\n//                 {[\"Order History\", \"Change Password\"].map((item, index) => (\n//                     <li\n//                         key={index}\n//                         className={`${Styles.listItem} ${\n//                             activeItem === index ? Styles.active : \"\"\n//                         }`}\n//                     >\n//                         <span className={Styles.triangle} onClick={() => handleToggle(index)}></span>\n//                         {activeItem === index ? null : item}\n//                         {(activeItem === index) && (index === 0) ? (\n//                             <div className={Styles.orders}>\n//                                 <h3>Order History</h3>\n//                                 {/* Will fill out logic for this section later */}\n//                                 {orders.map(order => {\n//                                     return (\n//                                         <ul>\n//                                             {order.products.map(product => <li>{`You bought ${product.quantity} ${product.name}${product.quantity === 1 ? '' : 's'} which cost £${product.price} each.`}</li>)}\n//                                             <li>Total: £{order.total}</li>\n//                                         </ul>\n//                                     );\n//                                 })}\n//                             </div>\n//                         ): null}\n//                         {(activeItem === index) && (index === 1) ? (\n//                             // Will fill out api call later\n//                             <form className={Styles.form} method=\"POST\" action={`http://localhost:50423/api/user/changePassword/${userId}`}>\n//                                 <h3>{item}</h3>\n//                                 <label htmlFor=\"oldPassword\">Current Password:</label>\n//                                 <input id='oldPassword' name=\"oldPassword\" type=\"password\" placeholder=\"Current password\" />\n//                                 <label htmlFor=\"newPassword\">New Password:</label>\n//                                 <input id='newPassword' name=\"newPassword\" type=\"password\" placeholder=\"New password\" />\n//                                 <label htmlFor=\"newPasswordCheck\">Re-enter New Password:</label>\n//                                 <input id='newPasswordCheck' name=\"newPasswordCheck\" type=\"password\" placeholder=\"New password\" />\n//                                 <input type='hidden' name='_csrf' value={csrfToken} />\n//                                 <button>Submit</button>\n//                             </form>\n//                         ): null}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// }\n\n// export default UserPage;\n\nimport { useEffect, useState } from \"react\";\nimport Styles from \"./Styles/UserPage.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadToken, selectToken } from \"../Components/LoginForm/TokenSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserPage() {\n  _s();\n  const [activeItem, setActiveItem] = useState(null);\n  const csrfToken = useSelector(selectToken);\n  const dispatch = useDispatch();\n  const [userId, setUserId] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const orders = [{\n    total: 25,\n    products: [{\n      name: 'Blue T-shirt',\n      price: 10,\n      quantity: 2\n    }, {\n      name: 'Blue Cap',\n      price: 7.50,\n      quantity: 1\n    }]\n  }];\n  const handleToggle = index => {\n    setActiveItem(prev => prev === index ? null : index);\n  };\n  const getUserId = async () => {\n    const response = await fetch('http://localhost:50423/api/user/id', {\n      credentials: 'include'\n    });\n    const result = await response.json();\n    if (response.ok) {\n      setUserId(result.id);\n    } else {\n      const error = result.error;\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    dispatch(loadToken);\n    getUserId();\n  }, []);\n\n  // Handle the password change form submission\n  const handlePasswordChange = async event => {\n    event.preventDefault(); // Prevent the default form submission\n\n    const oldPassword = event.target.oldPassword.value;\n    const newPassword = event.target.newPassword.value;\n    const newPasswordCheck = event.target.newPasswordCheck.value;\n    try {\n      const response = await fetch(`http://localhost:50423/api/user/changePassword/${userId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'CSRF-Token': csrfToken\n        },\n        body: JSON.stringify({\n          oldPassword,\n          newPassword,\n          newPasswordCheck\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        // Redirect if the server responded with a redirect URL\n        setSuccessMessage(result.success);\n      } else if (result.Error) {\n        // Show error message\n        setErrorMessage(result.Error);\n        setTimeout(() => {\n          set;\n        }, 2000);\n      }\n    } catch (error) {\n      console.error('Error during password change:', error);\n      setErrorMessage('An unexpected error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.user,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: Styles.list,\n      children: [[\"Order History\", \"Change Password\"].map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${Styles.listItem} ${activeItem === index ? Styles.active : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: Styles.triangle,\n          onClick: () => handleToggle(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), activeItem === index ? null : item, activeItem === index && index === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Styles.orders,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Order History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this), orders.map((order, orderIndex) => /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [order.products.map((product, productIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: `You bought ${product.quantity} ${product.name}${product.quantity === 1 ? '' : 's'} which cost £${product.price} each.`\n            }, productIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 45\n            }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Total: \\xA3\", order.total]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 41\n            }, this)]\n          }, orderIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }, this) : null, activeItem === index && index === 1 ? /*#__PURE__*/_jsxDEV(\"form\", {\n          className: Styles.form,\n          onSubmit: handlePasswordChange,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"oldPassword\",\n            children: \"Current Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"oldPassword\",\n            name: \"oldPassword\",\n            type: \"password\",\n            placeholder: \"Current password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPassword\",\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"newPassword\",\n            name: \"newPassword\",\n            type: \"password\",\n            placeholder: \"New password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newPasswordCheck\",\n            children: \"Re-enter New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"newPasswordCheck\",\n            name: \"newPasswordCheck\",\n            type: \"password\",\n            placeholder: \"New password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            name: \"_csrf\",\n            value: csrfToken\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: Styles.error,\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }, this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        color: \"white\",\n        children: successMessage ? successMessage : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n}\n_s(UserPage, \"IthDbXBQ4ezEtYYxZXzCMsrKjy0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["useEffect","useState","Styles","useSelector","useDispatch","loadToken","selectToken","jsxDEV","_jsxDEV","UserPage","_s","activeItem","setActiveItem","csrfToken","dispatch","userId","setUserId","errorMessage","setErrorMessage","successMessage","setSuccessMessage","orders","total","products","name","price","quantity","handleToggle","index","prev","getUserId","response","fetch","credentials","result","json","ok","id","error","alert","handlePasswordChange","event","preventDefault","oldPassword","target","value","newPassword","newPasswordCheck","method","headers","body","JSON","stringify","success","Error","setTimeout","set","console","className","user","children","fileName","_jsxFileName","lineNumber","columnNumber","list","map","item","listItem","active","triangle","onClick","order","orderIndex","product","productIndex","form","onSubmit","htmlFor","type","placeholder","required","color","_c","$RefreshReg$"],"sources":["/Users/abhikvinod/Documents/python/Ecommerce_PERN_App/view/src/Features/UserPage.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\n// import Styles from \"./Styles/UserPage.module.css\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { loadToken, selectToken } from \"../Components/LoginForm/TokenSlice\";\n\n// function UserPage() {\n//     const [activeItem, setActiveItem] = useState(null);\n//     const csrfToken = useSelector(selectToken);\n//     const dispatch = useDispatch();\n//     const [userId, setUserId] = useState(null);\n//     const orders = [{total: 25, products: [{name: 'Blue T-shirt', price: 10, quantity: 2}, {name: 'Blue Cap', price: 7.50, quantity: 1}]}];\n\n//     const handleToggle = (index) => {\n//         setActiveItem((prev) => (prev === index ? null : index));\n//     };\n\n//     const getUserId = async () => {\n//         const response = await fetch('http://localhost:50423/api/user/id', {\n//             credentials: 'include',\n//         });\n//         const result = await response.json();\n//         if (response.ok) {\n//             setUserId(result.id);\n//             alert(userId);\n//         } else {\n//             const error = result.error;\n//             alert(error);\n//         }\n//     }\n\n//     useEffect(() => {\n//         dispatch(loadToken);\n//         getUserId();\n//     }, []);\n\n//     return (\n//         <div className={Styles.user}>\n//             <h2>User Information</h2>\n//             <ul className={Styles.list}>\n//                 {[\"Order History\", \"Change Password\"].map((item, index) => (\n//                     <li\n//                         key={index}\n//                         className={`${Styles.listItem} ${\n//                             activeItem === index ? Styles.active : \"\"\n//                         }`}\n//                     >\n//                         <span className={Styles.triangle} onClick={() => handleToggle(index)}></span>\n//                         {activeItem === index ? null : item}\n//                         {(activeItem === index) && (index === 0) ? (\n//                             <div className={Styles.orders}>\n//                                 <h3>Order History</h3>\n//                                 {/* Will fill out logic for this section later */}\n//                                 {orders.map(order => {\n//                                     return (\n//                                         <ul>\n//                                             {order.products.map(product => <li>{`You bought ${product.quantity} ${product.name}${product.quantity === 1 ? '' : 's'} which cost £${product.price} each.`}</li>)}\n//                                             <li>Total: £{order.total}</li>\n//                                         </ul>\n//                                     );\n//                                 })}\n//                             </div>\n//                         ): null}\n//                         {(activeItem === index) && (index === 1) ? (\n//                             // Will fill out api call later\n//                             <form className={Styles.form} method=\"POST\" action={`http://localhost:50423/api/user/changePassword/${userId}`}>\n//                                 <h3>{item}</h3>\n//                                 <label htmlFor=\"oldPassword\">Current Password:</label>\n//                                 <input id='oldPassword' name=\"oldPassword\" type=\"password\" placeholder=\"Current password\" />\n//                                 <label htmlFor=\"newPassword\">New Password:</label>\n//                                 <input id='newPassword' name=\"newPassword\" type=\"password\" placeholder=\"New password\" />\n//                                 <label htmlFor=\"newPasswordCheck\">Re-enter New Password:</label>\n//                                 <input id='newPasswordCheck' name=\"newPasswordCheck\" type=\"password\" placeholder=\"New password\" />\n//                                 <input type='hidden' name='_csrf' value={csrfToken} />\n//                                 <button>Submit</button>\n//                             </form>\n//                         ): null}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// }\n\n// export default UserPage;\n\nimport { useEffect, useState } from \"react\";\nimport Styles from \"./Styles/UserPage.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadToken, selectToken } from \"../Components/LoginForm/TokenSlice\";\n\nfunction UserPage() {\n    const [activeItem, setActiveItem] = useState(null);\n    const csrfToken = useSelector(selectToken);\n    const dispatch = useDispatch();\n    const [userId, setUserId] = useState(null);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [successMessage, setSuccessMessage] = useState(null);\n    const orders = [{total: 25, products: [{name: 'Blue T-shirt', price: 10, quantity: 2}, {name: 'Blue Cap', price: 7.50, quantity: 1}]}];\n\n    const handleToggle = (index) => {\n        setActiveItem((prev) => (prev === index ? null : index));\n    };\n\n    const getUserId = async () => {\n        const response = await fetch('http://localhost:50423/api/user/id', {\n            credentials: 'include',\n        });\n        const result = await response.json();\n        if (response.ok) {\n            setUserId(result.id);\n        } else {\n            const error = result.error;\n            alert(error);\n        }\n    };\n\n    useEffect(() => {\n        dispatch(loadToken);\n        getUserId();\n    }, []);\n\n    // Handle the password change form submission\n    const handlePasswordChange = async (event) => {\n        event.preventDefault(); // Prevent the default form submission\n\n        const oldPassword = event.target.oldPassword.value;\n        const newPassword = event.target.newPassword.value;\n        const newPasswordCheck = event.target.newPasswordCheck.value;\n\n        try {\n            const response = await fetch(`http://localhost:50423/api/user/changePassword/${userId}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'CSRF-Token': csrfToken,\n                },\n                body: JSON.stringify({\n                    oldPassword,\n                    newPassword,\n                    newPasswordCheck,\n                }),\n            });\n\n            const result = await response.json();\n\n            if (response.ok) {\n                // Redirect if the server responded with a redirect URL\n                setSuccessMessage(result.success);\n            } else if (result.Error) {\n                // Show error message\n                setErrorMessage(result.Error);\n                setTimeout(() => {\n                    set\n                }, 2000)\n            }\n        } catch (error) {\n            console.error('Error during password change:', error);\n            setErrorMessage('An unexpected error occurred. Please try again.');\n        }\n    };\n\n    return (\n        <div className={Styles.user}>\n            <h2>User Information</h2>\n            <ul className={Styles.list}>\n                {[\"Order History\", \"Change Password\"].map((item, index) => (\n                    <li\n                        key={index}\n                        className={`${Styles.listItem} ${\n                            activeItem === index ? Styles.active : \"\"\n                        }`}\n                    >\n                        <span className={Styles.triangle} onClick={() => handleToggle(index)}></span>\n                        {activeItem === index ? null : item}\n                        {(activeItem === index) && (index === 0) ? (\n                            <div className={Styles.orders}>\n                                <h3>Order History</h3>\n                                {orders.map((order, orderIndex) => (\n                                    <ul key={orderIndex}>\n                                        {order.products.map((product, productIndex) => (\n                                            <li key={productIndex}>\n                                                {`You bought ${product.quantity} ${product.name}${product.quantity === 1 ? '' : 's'} which cost £${product.price} each.`}\n                                            </li>\n                                        ))}\n                                        <li>Total: £{order.total}</li>\n                                    </ul>\n                                ))}\n                            </div>\n                        ) : null}\n                        {(activeItem === index) && (index === 1) ? (\n                            <form className={Styles.form} onSubmit={handlePasswordChange}>\n                                <h3>{item}</h3>\n                                <label htmlFor=\"oldPassword\">Current Password:</label>\n                                <input id='oldPassword' name=\"oldPassword\" type=\"password\" placeholder=\"Current password\" required />\n                                <label htmlFor=\"newPassword\">New Password:</label>\n                                <input id='newPassword' name=\"newPassword\" type=\"password\" placeholder=\"New password\" required />\n                                <label htmlFor=\"newPasswordCheck\">Re-enter New Password:</label>\n                                <input id='newPasswordCheck' name=\"newPasswordCheck\" type=\"password\" placeholder=\"New password\" required />\n                                <input type='hidden' name='_csrf' value={csrfToken} />\n                                <button type=\"submit\">Submit</button>\n                                {errorMessage && <p className={Styles.error}>{errorMessage}</p>}\n                            </form>\n                        ) : null}\n                    </li>\n                ))}\n                <li color=\"white\">{successMessage ? successMessage : null}</li>\n            </ul>\n        </div>\n    );\n}\n\nexport default UserPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}