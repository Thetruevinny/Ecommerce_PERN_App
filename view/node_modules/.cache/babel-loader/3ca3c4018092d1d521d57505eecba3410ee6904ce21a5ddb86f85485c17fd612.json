{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// const initialState = [\n\n// ];\n\nexport const loadToken = createAsyncThunk('tokens/loadToken', async () => {\n  try {\n    const response = await fetch('http://localhost:50423/api/csrfToken', {\n      credentials: 'include'\n    });\n    if (response.ok) {\n      const json = await response.json();\n      return json.csrfToken;\n    }\n  } catch (error) {\n    throw new Error(error);\n  }\n});\nconst tokenSlice = createSlice({\n  name: \"tokens\",\n  initialState: {\n    token: \"\",\n    isLoading: false,\n    hasError: false\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loadToken.pending, state => {\n      state.isLoading = true;\n      state.hasError = false;\n    }).addCase(loadToken.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.hasError = false;\n      state.token = action.payload;\n    }).addCase(loadToken.rejected, state => {\n      state.isLoading = false;\n      state.hasError = true;\n    });\n  }\n});\nexport const selectToken = state => state.tokens.token;\nexport default tokenSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loadToken","response","fetch","credentials","ok","json","csrfToken","error","Error","tokenSlice","name","initialState","token","isLoading","hasError","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","selectToken","tokens","reducer"],"sources":["/Users/abhikvinod/Documents/python/Ecommerce_PERN_App/view/src/Components/LoginForm/TokenSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// const initialState = [\n\n// ];\n\nexport const loadToken = createAsyncThunk(\n    'tokens/loadToken',\n    async () => {\n        try {\n            const response = await fetch('http://localhost:50423/api/csrfToken', {\n                credentials: 'include'\n            });\n            if (response.ok) {\n                const json = await response.json();\n                return json.csrfToken;\n            }\n        } catch (error) {\n            throw new Error(error);\n        }\n    }\n);\n\nconst tokenSlice = createSlice({\n    name: \"tokens\",\n    initialState: {\n        token: \"\",\n        isLoading: false,\n        hasError: false\n    },\n    reducers: {\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(loadToken.pending, (state) => {\n                state.isLoading = true;\n                state.hasError = false;\n            })\n\n            .addCase(loadToken.fulfilled, (state, action) => {\n                state.isLoading = false;\n                state.hasError = false;\n                state.token = action.payload;\n            })\n\n            .addCase(loadToken.rejected, (state) => {\n                state.isLoading = false;\n                state.hasError = true;\n            })\n    }\n});\n\nexport const selectToken = (state) => state.tokens.token;\n\nexport default tokenSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;;AAEA;;AAEA,OAAO,MAAMC,SAAS,GAAGD,gBAAgB,CACrC,kBAAkB,EAClB,YAAY;EACR,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACjEC,WAAW,EAAE;IACjB,CAAC,CAAC;IACF,IAAIF,QAAQ,CAACG,EAAE,EAAE;MACb,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,OAAOA,IAAI,CAACC,SAAS;IACzB;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;EAC1B;AACJ,CACJ,CAAC;AAED,MAAME,UAAU,GAAGX,WAAW,CAAC;EAC3BY,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAAClB,SAAS,CAACmB,OAAO,EAAGC,KAAK,IAAK;MACnCA,KAAK,CAACP,SAAS,GAAG,IAAI;MACtBO,KAAK,CAACN,QAAQ,GAAG,KAAK;IAC1B,CAAC,CAAC,CAEDI,OAAO,CAAClB,SAAS,CAACqB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,QAAQ,GAAG,KAAK;MACtBM,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CAEDL,OAAO,CAAClB,SAAS,CAACwB,QAAQ,EAAGJ,KAAK,IAAK;MACpCA,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,QAAQ,GAAG,IAAI;IACzB,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMW,WAAW,GAAIL,KAAK,IAAKA,KAAK,CAACM,MAAM,CAACd,KAAK;AAExD,eAAeH,UAAU,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}