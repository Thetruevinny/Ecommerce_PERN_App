{"ast":null,"code":"import { createSlice, createA } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  name: \"Blue T-shirt\",\n  price: 10,\n  category: \"shirt\",\n  quantity: 100\n}, {\n  name: \"Red T-shirt\",\n  price: 10,\n  category: \"shirt\",\n  quantity: 100\n}, {\n  name: \"Red Chinos\",\n  price: 25,\n  category: \"trousers\",\n  quantity: 50\n}, {\n  name: \"Blue Chinos\",\n  price: 7.5,\n  category: \"hats\",\n  quantity: 25\n}, {\n  name: \"Red Hat\",\n  price: 7.5,\n  category: \"hats\",\n  quantity: 50\n}];\nexport const loadProducts = createAsyncThunk('products/loadProducts', async () => {\n  try {\n    const response = await fetch('api/products');\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    throw new Error(error);\n  }\n});\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState: {\n    data: initialState,\n    isLoading: false,\n    hasError: false\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loadProducts.pending, state => {\n      state.isLoading = true;\n      state.hasError = false;\n    }).addCase(loadProducts.fulfilled, state => {\n      state.isLoading = false;\n      state.hasError = false;\n      state.data = action.payload;\n    }).addCase(loadProducts.rejected, state => {\n      state.isLoading = false;\n      state.hasError = true;\n    });\n  }\n});\nexport const selectProducts = state => state.products.data;\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createA","initialState","name","price","category","quantity","loadProducts","createAsyncThunk","response","fetch","json","error","Error","productsSlice","data","isLoading","hasError","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","selectProducts","products","reducer"],"sources":["/Users/abhikvinod/Documents/python/Ecommerce_PERN_App/view/src/Components/Products/ProductsSlice.js"],"sourcesContent":["import { createSlice, createA } from \"@reduxjs/toolkit\";\n\nconst initialState = [\n    {\n        name: \"Blue T-shirt\",\n        price: 10,\n        category: \"shirt\",\n        quantity: 100\n    },\n    {\n        name: \"Red T-shirt\",\n        price: 10,\n        category: \"shirt\",\n        quantity: 100\n    },\n    {\n        name: \"Red Chinos\",\n        price: 25,\n        category: \"trousers\",\n        quantity: 50\n    },\n    {\n        name: \"Blue Chinos\",\n        price: 7.5,\n        category: \"hats\",\n        quantity: 25\n    },\n    {\n        name: \"Red Hat\",\n        price: 7.5,\n        category: \"hats\",\n        quantity: 50\n    },\n];\n\nexport const loadProducts = createAsyncThunk(\n    'products/loadProducts',\n    async () => {\n        try {\n            const response = await fetch('api/products');\n            const json = await response.json();\n            return json;\n        } catch (error) {\n            throw new Error(error);\n        }\n    }\n);\n\nconst productsSlice = createSlice({\n    name: \"products\",\n    initialState: {\n        data: initialState,\n        isLoading: false,\n        hasError: false\n    },\n    reducers: {\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(loadProducts.pending, (state) => {\n                state.isLoading = true;\n                state.hasError = false;\n            })\n\n            .addCase(loadProducts.fulfilled, (state) => {\n                state.isLoading = false;\n                state.hasError = false;\n                state.data = action.payload;\n            })\n\n            .addCase(loadProducts.rejected, (state) => {\n                state.isLoading = false;\n                state.hasError = true;\n            })\n    }\n});\n\nexport const selectProducts = (state) => state.products.data;\n\nexport default productsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,kBAAkB;AAEvD,MAAMC,YAAY,GAAG,CACjB;EACIC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,OAAO;EACjBC,QAAQ,EAAE;AACd,CAAC,EACD;EACIH,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,OAAO;EACjBC,QAAQ,EAAE;AACd,CAAC,EACD;EACIH,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE;AACd,CAAC,EACD;EACIH,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,GAAG;EACVC,QAAQ,EAAE,MAAM;EAChBC,QAAQ,EAAE;AACd,CAAC,EACD;EACIH,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,GAAG;EACVC,QAAQ,EAAE,MAAM;EAChBC,QAAQ,EAAE;AACd,CAAC,CACJ;AAED,OAAO,MAAMC,YAAY,GAAGC,gBAAgB,CACxC,uBAAuB,EACvB,YAAY;EACR,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,CAAC;IAC5C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;IAClC,OAAOA,IAAI;EACf,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;EAC1B;AACJ,CACJ,CAAC;AAED,MAAME,aAAa,GAAGd,WAAW,CAAC;EAC9BG,IAAI,EAAE,UAAU;EAChBD,YAAY,EAAE;IACVa,IAAI,EAAEb,YAAY;IAClBc,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACd,YAAY,CAACe,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACP,SAAS,GAAG,IAAI;MACtBO,KAAK,CAACN,QAAQ,GAAG,KAAK;IAC1B,CAAC,CAAC,CAEDI,OAAO,CAACd,YAAY,CAACiB,SAAS,EAAGD,KAAK,IAAK;MACxCA,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,QAAQ,GAAG,KAAK;MACtBM,KAAK,CAACR,IAAI,GAAGU,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CAEDL,OAAO,CAACd,YAAY,CAACoB,QAAQ,EAAGJ,KAAK,IAAK;MACvCA,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,QAAQ,GAAG,IAAI;IACzB,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMW,cAAc,GAAIL,KAAK,IAAKA,KAAK,CAACM,QAAQ,CAACd,IAAI;AAE5D,eAAeD,aAAa,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}