{"ast":null,"code":"var _jsxFileName = \"/Users/abhikvinod/Documents/python/Ecommerce_PERN_App/view/src/Features/CartPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { getCart } from '../Components/Cart/CartSlice';\nimport Styles from './Styles/CartPage.module.css';\n\n// Creating Stripe Promise object for use in payments path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51QJhLcFSdvIgaIEWN9awNHE7eQM6OVV9CQBJWHLZ8Qe7z9cCdHuJfCiMkoQP9yWXM4VttPnqNedNPZrP2r70E4gu003n0mfzvl');\n\n// Creating cart componenet\nfunction CartPage() {\n  _s();\n  const cart = useSelector(getCart);\n  const navigate = useNavigate();\n  const [price, setPrice] = useState([]);\n  const [verified, setVerified] = useState(false);\n\n  // Initialising quantities state with products as keys and quantities as values (initially set to 1).\n  const [quantities, setQuantities] = useState(cart.reduce((acc, product) => {\n    acc[product.name] = 1;\n    return acc;\n  }, {}));\n\n  // Handles quantity change when user types in input field\n  const handleQuantityChange = (event, productName) => {\n    setQuantities({\n      ...quantities,\n      [productName]: event.target.value\n    });\n  };\n\n  // Check if the user is authenticated if not redirects to login\n  const checkAuth = async () => {\n    const response = await fetch('http://localhost:50423/api/check', {\n      credentials: 'include'\n    });\n    const json = await response.json();\n    setVerified(json.result);\n    if (!json.result) {\n      array.forEach(element => {});\n      setTimeout(() => navigate('/login'), 6000);\n    }\n  };\n\n  // Effect hook called when component renders to check authentication\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  // Effect hook to calculate running total is called whenever quantities changes\n  useEffect(() => {\n    const total = cart.reduce((acc, product) => {\n      return acc += quantities[product.name] * product.price;\n    }, 0);\n    setPrice(total);\n  }, [quantities]);\n\n  // Handle the check out button click, causes user to be redirected to stripe for payment\n  const handleCheckout = async () => {\n    const stripe = await stripePromise;\n    const response = await fetch('http://localhost:50423/api/create-checkout-session', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        cart,\n        quantities\n      }),\n      credentials: 'include'\n    });\n    const session = await response.json();\n    if (session.url) {\n      window.location.href = session.url; // Redirect to Stripe checkout\n    }\n  };\n\n  // Authentication check and renders different compoenents dependant on the result\n  if (!verified) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: Styles.error,\n      children: \"To access this page, you must be logged in. Please wait to be redirected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.cartPage,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.form,\n      children: [cart.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: product.name,\n          children: [product.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: product.name,\n          type: \"number\",\n          value: quantities[product.name],\n          onChange: event => handleQuantityChange(event, product.name),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total for \", product.name, \" is \\xA3\", quantities[product.name] * product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, product.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: \\xA3\", price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleCheckout,\n        children: \"Checkout with Stripe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(CartPage, \"NLMa7PhmoHqdmIyyjDheSzhOK2c=\", false, function () {\n  return [useSelector, useNavigate];\n});\n_c = CartPage;\nexport default CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useNavigate","loadStripe","getCart","Styles","jsxDEV","_jsxDEV","stripePromise","CartPage","_s","cart","navigate","price","setPrice","verified","setVerified","quantities","setQuantities","reduce","acc","product","name","handleQuantityChange","event","productName","target","value","checkAuth","response","fetch","credentials","json","result","array","forEach","element","setTimeout","total","handleCheckout","stripe","method","headers","body","JSON","stringify","session","url","window","location","href","className","error","children","fileName","_jsxFileName","lineNumber","columnNumber","cartPage","form","map","htmlFor","id","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["/Users/abhikvinod/Documents/python/Ecommerce_PERN_App/view/src/Features/CartPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { getCart } from '../Components/Cart/CartSlice';\nimport Styles from './Styles/CartPage.module.css';\n\n// Creating Stripe Promise object for use in payments path\nconst stripePromise = loadStripe('pk_test_51QJhLcFSdvIgaIEWN9awNHE7eQM6OVV9CQBJWHLZ8Qe7z9cCdHuJfCiMkoQP9yWXM4VttPnqNedNPZrP2r70E4gu003n0mfzvl');\n\n// Creating cart componenet\nfunction CartPage() {\n    const cart = useSelector(getCart);\n    const navigate = useNavigate();\n    const [price, setPrice] = useState([]);\n    const [verified, setVerified] = useState(false);\n\n    // Initialising quantities state with products as keys and quantities as values (initially set to 1).\n    const [quantities, setQuantities] = useState(\n        cart.reduce((acc, product) => {\n            acc[product.name] = 1;\n            return acc;\n        }, {})\n    );\n\n    // Handles quantity change when user types in input field\n    const handleQuantityChange = (event, productName) => {\n        setQuantities({\n            ...quantities,\n            [productName]: event.target.value,\n        });\n    };\n\n    // Check if the user is authenticated if not redirects to login\n    const checkAuth = async () => {\n        const response = await fetch('http://localhost:50423/api/check', {\n            credentials: 'include',\n        });\n        const json = await response.json();\n        setVerified(json.result);\n        if (!json.result) {\n            array.forEach(element => {\n                \n            });\n            setTimeout(() => navigate('/login'), 6000);\n        }\n    };\n\n    // Effect hook called when component renders to check authentication\n    useEffect(() => {\n        checkAuth();\n    }, []);\n\n    // Effect hook to calculate running total is called whenever quantities changes\n    useEffect(() => {\n        const total = cart.reduce((acc, product) => {\n            return (acc += quantities[product.name] * product.price);\n        }, 0);\n        setPrice(total);\n    }, [quantities]);\n\n    // Handle the check out button click, causes user to be redirected to stripe for payment\n    const handleCheckout = async () => {\n        const stripe = await stripePromise;\n        const response = await fetch('http://localhost:50423/api/create-checkout-session', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ cart, quantities }),\n            credentials: 'include',\n        });\n        const session = await response.json();\n        if (session.url) {\n            window.location.href = session.url; // Redirect to Stripe checkout\n        }\n    };\n\n    // Authentication check and renders different compoenents dependant on the result\n    if (!verified) {\n        return <p className={Styles.error}>To access this page, you must be logged in. Please wait to be redirected.</p>;\n    }\n\n    return (\n        <div className={Styles.cartPage}>\n            <h2>Cart</h2>\n            <div className={Styles.form} >\n                {cart.map((product) => (\n                    <div key={product.name}>\n                        <label htmlFor={product.name}>{product.name}:</label>\n                        <input\n                            id={product.name}\n                            type='number'\n                            value={quantities[product.name]}\n                            onChange={(event) => handleQuantityChange(event, product.name)}\n                            required\n                        />\n                        <p>Total for {product.name} is £{quantities[product.name] * product.price}</p>\n                        <hr></hr>\n                    </div>\n                ))}\n                <p>Total: £{price}</p>\n                <hr></hr>\n                <button type='button' onClick={handleCheckout}>Checkout with Stripe</button>\n            </div>\n        </div>\n    );\n}\n\nexport default CartPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}